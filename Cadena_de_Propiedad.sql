-- ACTIVAMOS NUESTRA BASE DE DATOS
use LamsCruises
go

--VAMOS A CREAR UN ESQUEMA LLAMADO RRHH EN NUESTRA BASE DE DATOS.
-- CONTROLAMOS LA EXISTENCIA DEL ESQUEMA Y LUEGO LO CREAMOS
DROP SCHEMA IF EXISTS RRHH
GO

CREATE SCHEMA RRHH
GO

--UNA VEZ CREADO EL ESQUEMA VAMOS A AGREGAR UNA DE NUESTRAS TABLAS A DICHO ESQUEMA.
--PARA AGREGAR UNA DE NUESTRAS TABLAS AL ESQUEMA USAMOS LA SIGUIENTE SENTENCIA.

ALTER SCHEMA RRHH TRANSFER Tripulacion

SELECT * FROM RRHH.Tripulacion

--CON LA SENTENCIA ANTERIOR, CON EL SELECT NOS MUESTRA EL CONTENIDO DE LA TABLA.

--AHORA VAMOS A CREAR UNA VISTA PARA QUE UN USUARIO PUEDA VER EL CONTENIDO DE LA TABLA
-- MAS NO PODRA REALIZAR OPERACIONES DIRECTAMENTE SOBRE DICHA TABLA,EN ESTE CASO LA TABLA TRIPULACIÓN.

--CONTROLAMOS LA EXISTENCIA DE LA VISTA, Y LUEGO LA CREAMOS.
--LA VISTA SERÁ UN SELECT SOBRE LA TABLA TRIPULACION.

DROP VIEW IF EXISTS RRHH.VistaTripulacion
go

CREATE VIEW RRHH.VistaTripulacion
AS
	SELECT
		ID_Miembro, Nombre, Apellido, Cargo, Crucero_ID_Crucero
from RRHH.Tripulacion;
go

-- UNA VEZ CREADA LA VISTA, VAMOS A CREAR UN NUEVO ROL PARA DEMOSTRAR EL FUNCIONAMIENTO DE LA VISTA.
-- PRIMERO CONTROLAMOS LA EXISTENCIA DEL ROL, Y LUEGO PROCEDEMOS A CREARLO.

DROP ROLE IF EXISTS PruebaRol;
go

CREATE ROLE PruebaRol;
go

--UNA VEZ CREADO EL ROL, PROCEDEMOS A DARLE PERMISOS AL ROL SOBRE LA VISTA
-- ES DECIR, DAMOS PERMISOS DE CONSULTA A PRUEBAROL SOBRE LA VISTA HR.TRIPULACION.

GRANT SELECT ON RRHH.VistaTripulacion TO PruebaRol;
go

--AHORA PROCEDEMOS A CREAR UN USUARIO, PARA INCLUIRLO EN EL ROL Y PROBAR LOS PERMISOS OTORGADOS.

DROP USER IF EXISTS Manuel;
GO

-- EL USUARIO QUE ESTAMOS CREANDO SERÁ SIN LOGIN
CREATE USER Manuel WITHOUT LOGIN;
GO

-- EL USUARIO QUE HEMOS CREADO PODRA VER EL CONTENIDO DE LA TABLA MEDIANTE LA VISTA
-- MAS NO PODRA HACER OPERACIONES EN ESTE CASO DE CONSULTA DIRECTAMENTE SOBRE LA TABLA.

ALTER ROLE PruebaRol
	ADD MEMBER Manuel;
go

--Con la sentencia anterior estamos añadiendo el nuevo usuario que hemos creado al Rol.
-- Añadimos a Manuel >> PruebaRol.

execute as user = 'Manuel';
go

print user
--Este sentencia vamos a impersonar al usuario creado manuel, para ejecutar una sentencia de consulta
--sobre la vista RRHH.TRIPULACION

select * from RRHH.Tripulacion;
go

--(80 rows affected)
-- COMO VEMOS, FUNCIONA CORRECTAMENTE

-- PARA DEMOSTRAR EL FUNCIONAMIENTO, VAMOS A HACER UNA CONSULTA SOBRE CUALQUIER OTRA TABLA DE LA BASE DE DATOS
-- PARA VERIFICAR QUE AL NO TENER LOS PERMISOS NECESARIOS, NOS DA UN ERROR POR NO DISPONER DE LOS PERMISOS NECESARIOS PARA CONSULTAR.

SELECT * FROM Billete;

--Msg 229, Level 14, State 5, Line 88
--Se denegó el permiso SELECT en el objeto 'Billete', base de datos 'LamsCruises', esquema 'dbo'.

PRINT USER

--Manuel
--Completion time: 2023-11-17T18:37:19.4204363+01:00

-- AHORA REVERTIMOS EL USUARIO PARA PROCEDER CON EL SIGUIENTE EJEMPLO

REVERT
PRINT USER
--dbo
--Completion time: 2023-11-17T18:40:00.8959787+01:00

-- AHORA VAMOS A CREAR UN PROCEDIMIENTO ALMACENADO PARA OTRO EJEMPLO.
--EL PROCEDIMIENTO ALMACENADO SERA DE INSERCIÓN DE DATOS EN UNA TABLA

CREATE OR ALTER PROC RRHH.Insertar
	@ID_Miembro varchar(10),
	@Nombre varchar(20),
	@Apellido varchar (20),
	@Cargo varchar(50),
	@Crucero_ID_Crucero varchar(20)
as
BEGIN
	INSERT INTO RRHH.Tripulacion
		(ID_Miembro, Nombre, Apellido, Cargo, Crucero_ID_Crucero)
		VALUES
		(@ID_Miembro, @Nombre, @Apellido, @Cargo, @Crucero_ID_Crucero);
END;

--AHORA PROCEDEREMOS A CREAR OTRO ROL PARA ESTE EJEMPL
--COMO SIEMPRE, CONTROLAMOS LA EXISTENCIA DEL ROL Y LO CREAMOS

DROP ROLE IF EXISTS RolSP;
go

CREATE ROLE RolSP;
go

--OTORGAMOS PERMISOS AL ESQUEMA CREADO EN EL EJERCICIO ANTERIOR RRHH.

GRANT EXECUTE ON SCHEMA :: RRHH TO RolSP;
GO
--Commands completed successfully.
--Completion time: 2023-11-17T19:07:34.3286205+01:00

--AHORA PROCEDEMOS A CREAR OTRO USUARIO SIN LOGIN, PARA INCLUIRLO EN EL ROL
--Y PROCEDER A REALIZAR LA INSERCION EN LA TABLA TRIPULACION.

DROP USER IF EXISTS Luis;
go
--Commands completed successfully.
--Completion time: 2023-11-17T19:07:34.3286205+01:00

CREATE USER Luis WITHOUT LOGIN;
GO
--Commands completed successfully.
--Completion time: 2023-11-17T19:07:34.3286205+01:00

ALTER ROLE RolSP 
ADD MEMBER Luis;
go
--Commands completed successfully.
--Completion time: 2023-11-17T19:07:34.3286205+01:00

--PARA EJECUTAR EL PROCEDIMIENTO VAMOS A IMPERSONAR AL USUARIO QUE HEMOS CREADO

EXECUTE AS USER = 'Luis';
go

PRINT USER;
--Luis
--Completion time: 2023-11-17T19:13:40.8004024+01:00

--AHORA PROCEDEMOS A EJECUTAR EL PROCEDIMIENTO ALMACENADO QUE HEMOS CREADO INSERTANDO DATOS A LA TABLA TRIULACIÓN.

EXECUTE RRHH.Insertar
	@ID_Miembro = 'Trip-81',
	@Nombre = 'Carlos',
	@Apellido = 'Corbelle',
	@Cargo = 'Capitan',
	@Crucero_ID_Crucero = 'BD';
GO
--(1 row affected)
--Completion time: 2023-11-17T19:14:16.7541341+01:00

PRINT USER
--Luis
--Completion time: 2023-11-17T19:14:32.5626046+01:00

SELECT * FROM RRHH.Tripulacion
go
--Msg 229, Level 14, State 5, Line 182
--Se denegó el permiso SELECT en el objeto 'Tripulacion', base de datos 'LamsCruises', esquema 'RRHH'

--COMO VEMOS NO NOS DEJA HACER UNA CONSULTA SOBRE LA TABLA PORQUE NO TENEMOS PERMISOS, SIN EMBARGO
--HAREMOS UN REVERT PARA PODER VER LA TABLA Y VERIFICAR QUE SE HAN INCLUIDO LOS DATOS DEL PROCEDIMIENTO ALMACENADO.

REVERT

PRINT USER
--dbo
--Completion time: 2023-11-17T19:16:12.7143946+01:00

SELECT * FROM RRHH.Tripulacion
go
--Trip-81	Carlos	Corbelle	Capitan	BD